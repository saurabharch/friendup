#
# FriendCore uses the cfg.ini file in the cfg folder to read important settings during its startup. Changes to the cfg.ini file require a FriendCore restart.
# The file contains some sections that are required whereas others are optional.
#

#
# This section tells FriendCore where its main database is located. The DatabaseUser section needs these values:
#

[DatabaseUser]
#
# database user name, default “root”
login = root
#
# database user password, default “root” 
password = root
#
# hostname where database is, default “localhost”
host = localhost
#
# database name, default “FriendMaster”
dbname = FriendMaster
#
# internet port on which database is working, default 3306
port = 3306

#
# The FriendCore section is needed to define the port FriendCore runs on and other variables.
#

[FriendCore]
#
# host name
fchost = localhost
#
# port used by FriendCore
port = 6502
#
# path where upload will be sored. Default value is "storage/"
fcupload = storage/

#
# This section allow to set main FC variables. In this section you can set values:
#
 
[Core]

#
# number of events handled by epoll, default value 1024,
epollevents = 1024
#
# network buffer size, default value 8192,
networkbuffer = 8192
#
# number of events handled by epoll in communication service, default value 1024,
Epolleventscom = 1024
#
# communication service network buffer size, default value 8192,
Networkbuffercom = 8192
#
# number of events handled by epoll in remote service, default value 1024,
Epolleventscomremote = 1024
#
# internet port on which FC will work, default value 6502,
port=6502
#
# internet port on which FC websockets will work, default value 6500,
wsport=6500
#
# internet port on which FC communicate with another FC, default value 6503,
cport=6503
#
# internet port on which FC remote services are working, default value 6504, 
cremoteport = 6504
#
# set 1 to enable ssl, otherwise 0, default value 0
SSLEnable=0
#
# set 1 to enable websockets ssl, otherwise 0. When SSLEnable is set to one this variable is set to 1 too, default value 0.
WSSSLEnable=0
#
# set 1 to enable ssl in FC - FC communication, default value 0,
CSSLEnable=0
#
# Disable websockets. Default value 0
#DisableWS=1
#
# set 1 to enable static file caching, default value 1,
#CacheFiles=1
#
# set 0 to disable unmounting doors in database, default value 1,
#UnmountInDB=1
#
# sockets timeout value, default 10000 miliseconds,
#SSLSocketTimeout = 10000
#
# path to place where ssl certificates are stored, default value “cfg/crt/”
#Certpath=cfg/crt/
#
# skip database update routine during start, default value false
#skipDBUpdate = false
#
# here you can set icon shortcuts to applications on the Workspace by default. The format is, in a double quoted comma separated list: 
# “applicationName:relativePath/to/icon,app2:relativePath/etfc/icon.png” 
# The relative path points to the resources/ directory in the build/ directory (where you have installed Friend Core). If this variable is not set, no Workspace shortcuts will show up.
#workspaceshortcuts
#
# number of workers which are responsible for run user calls. Default value 32.
#Workers=32
#
# set node as Cluster Master. Default value = 0
#ClusterMaster=0
#
#Add X-Frame-Options header to each FriendCore response. If field is empty this header is not added. Option also accept entries:
#DENY - The page cannot be displayed in a frame
#SAMEORIGIN - The page can only be displayed in a frame on the same origin as the page itself
#ALLOW-FROM https://example.com/ - The page can only be displayed in a frame on the specified origin
#XFrameOption=
#
# This section allow admin to configure modules responsible for authentication. Settings which could be changed:
#

[LoginModules]
#
# name of module which will be used to authenticate users, default value “fcdb.authmod”
use=fcdb.authmod
#
# modules which will be used to authenticate users, default value is empty.
modules=

#
# Section stores information about logging. Variables:
#

[Log]
#
# indicate which minimal level of log messages should appear in console. Below list of levels and their numbers which should be placed in config file:
#	FLOG_LIVE   1
#	FLOG_INFO   2
#	FLOG_WARN   3
#	FLOG_DEBUG  4
#	FLOG_ERROR  5
#	FLOG_FATAL  6
#	FLOG_PANIC  7
#level=1
#
# same information but only for entries which will appear in file log
#fileLevel=
#
# name of log file (+date will be added automatically)
#fileName=

#
# Special action logger. Can be used by bussiness to track user actions
#

[Logger]
#
# default user logger. Default value is empty
#active=

#
# Configuration of FriendNetwork
#

[FriendNetwork]
#
# option which enable or disable FriendNetwork. Default value is equal to 0
#enabled = 0

#
# Configuration of NotificationService
#

[NotificationService]
#
# Secret key to allow third party systems to send notifications to mobile apps
key=secret0000000000000000000000000000000000000000000

#
# Security section
#
#If the security system is enabled, you must add a wildcard entry in the DNS list of the server's domain. If your server is running on say, testserver.friendup.cloud', the allocated subdomains will be in the form of 'friendXX.testserver.friendup.cloud', XX being the number of the subdomain, ranging from 1 to 100.
#Warning: if you enable the security system on your server and do not add a wildcard entry to the DNS setup, the applications launched on any Friend machine hosted by this server will stay blank.
#If you want to enable the subdomain security on a local server, you must add the list of all subdomains manually to the '/etc/hosts' file of your Linux machine, or install a DNS server. Note that if your local server is running with a self-signed TLS key, the browser will refuse any communication until the TLS key has been manually validated by the user for each domain of the list in the browser debugger. 
#This can be a tedious process for 100 entries and is the reason why we do not suggest to use the security system for development machines.
#
#The configuration file can contain additional sections. Dropbox and Google Drive file systems require valid sections. Also the SAML functionality requires its section in the cfg.ini to work as expected.
#
# This section contains the definition of the security subdomain system. Friend will run in low-security mode if this section is not defined, but it will run.

[Security]
#
# indicates the root name of the allocated subdomains. Example: 'friend'.
#subdomainsroot=
#
# indicates the number of available subdomains. Example '100'.
#subdomainsnumber

#
# The email setup is used by the system e.g. to send out mail to users that have forgotten their password.
# 

[Mail]
#
# email server host name. Default empty.
#host=email.domain.com
#
# user e-mail name. Default empty.
#user=superuser@email.domain.com
#
# user e-mail password. Default empty.
#pass=secured
#
# information from which e-mail comes. Default empty.
#from=superuser@email.domain.com
#
# information from which user e-mail comes. Default empty
#fromname=FriendUP

