/*©mit**************************************************************************
*                                                                              *
* This file is part of FRIEND UNIFYING PLATFORM.                               *
* Copyright (c) Friend Software Labs AS. All rights reserved.                  *
*                                                                              *
* Licensed under the Source EULA. Please refer to the copy of the MIT License, *
* found in the file license_mit.txt.                                           *
*                                                                              *
*****************************************************************************©*/
/** @file
 *
 * Definition of NotificationSent
 *
 * @author PS (Pawel Stefanski)
 * @date created PS (03/12/2018)
 */

#ifndef __SYSTEM_NOTIFICATION_NOTIFICATION_SENT_H__
#define __SYSTEM_NOTIFICATION_NOTIFICATION_SENT_H__

#include <core/types.h>
#include <core/nodes.h>
#include <db/sqllib.h>
#include <stddef.h>
#include <system/user/user_session.h>

/*

 CREATE TABLE IF NOT EXISTS `FNotificationSent` ( 
   `ID` bigint(20) NOT NULL AUTO_INCREMENT,
   `NotificationID` bigint(20) NOT NULL,
   `RequestID` bigint(20) NOT NULL,
   `UserMobileAppID` bigint(20) NOT NULL,
   `Target` bigint(6) NOT NULL,
   `Status` bigint(6) NOT NULL,
   PRIMARY KEY (`ID`)
 ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

*/

enum
{
	NOTIFICATION_SENT_TARGET_WS = 0,
	NOTIFICATION_SENT_TARGET_ANDROID_WS,
	NOTIFICATION_SENT_TARGET_IOS
};

enum
{
	NOTIFICATION_SENT_STATUS_REGISTERED = 0,
	NOTIFICATION_SENT_STATUS_RECEIVED,
	NOTIFICATION_SENT_STATUS_READ,
	NOTIFICATION_SENT_STATUS_END,
	NOTIFICATION_SENT_STATUS_MAX
};

typedef struct NotificationSent
{
	struct MinNode 			node;
	FULONG 					ns_ID;					// id
	FULONG 					ns_NotificationID;		// ID of Notification object
	FULONG 					ns_RequestID;			// ID generated by code
	FULONG					ns_UserMobileAppID;		// User Mobile App ID
	FULONG					ns_Target;				// Target enum
	int						ns_Status;
}NotificationSent;



//
// NotificationSent
//

NotificationSent *NotificationSentNew( );

// Init NotificationSent

void NotificationSentInit( NotificationSent *n );

// release NotificationSent

void NotificationSentDelete( NotificationSent *n );

// release NotificationSent All

void NotificationSentDeleteAll( NotificationSent *n );

static FULONG NotificationSentDesc[] = { SQLT_TABNAME, (FULONG)"FNotificationSent", SQLT_STRUCTSIZE, sizeof( struct NotificationSent ),
	SQLT_IDINT, (FULONG)"ID", offsetof( NotificationSent, ns_ID ),
	SQLT_INT, (FULONG)"NotificationID", offsetof( NotificationSent, ns_NotificationID ),
	SQLT_INT, (FULONG)"RequestID", offsetof( NotificationSent, ns_RequestID ),
	SQLT_INT, (FULONG)"UserMobileAppID", offsetof( NotificationSent, ns_UserMobileAppID ),
	SQLT_INT, (FULONG)"Target", offsetof( NotificationSent, ns_Target ),
	SQLT_INT, (FULONG)"Status", offsetof( NotificationSent, ns_Status ),
	SQLT_INIT_FUNCTION, (FULONG)"init", (FULONG)&NotificationSentInit,
	SQLT_NODE, (FULONG)"node", offsetof( NotificationSent, node ),
	SQLT_END };

#endif //__SYSTEM_NOTIFICATION_NOTIFICATION_SENT_H__
